name: Test Coverage
on:
  push: # Triggers the workflow on push events
  workflow_dispatch: # Allows you to run this workflow manually from the Actions tab
jobs:
  test_coverage:
    runs-on: ubuntu-latest
    steps:
      - run: echo "The job was automatically triggered by a ${{ github.event_name }} event."
      - run: echo "This job is now running on a ${{ runner.os }} server."
      - run: echo "Branch name ${{ github.ref }}; repository ${{ github.repository }}."
      - name: Check out repository code
        uses: actions/checkout@v4
        with:
          submodules: true
          token: ${{ secrets.GITFLOW_PAT }}
      
      - name: Set up Python
        uses: actions/setup-python@v4.8.0
        with:
          python-version: '3.10'

      - name: Install Dependencies
        run: |
          pip install -e .[dev]
          coverage --version
          echo "All required dependencies have been installed."

      - name: Run Coverage & Create Badge
        run: |
          coverage run -m --source=project_name/ pytest
          coverage report -i >> testcoverage.txt
          coverage-badge -o testcoverage_badge.svg

      - name: Update coverage files in source and commit
        run: |
          rm -rf .coverage
          mv testcoverage_badge.svg ./doc/
          mv testcoverage.txt ./doc/
          
          # only update if there has been a change
          if [ -n "$(git status --porcelain)" ]; then
            git config --local user.email "action@github.com"
            git config --local user.name "GitHub Action"
            git add .
            git commit -am "Update test coverage links ${{ github.ref }}"
            git push https://${{ secrets.GITFLOW_PAT }}@github.com/${{ github.repository }} ${{ github.ref }}
          else
            echo "No changes to coverage found"
          fi


